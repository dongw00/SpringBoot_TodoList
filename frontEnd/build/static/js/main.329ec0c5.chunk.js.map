{"version":3,"sources":["assets/img/logo.svg","components/AppNavbar.js","components/AlertMessage.js","components/TodoList.js","components/TodoEdit.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AppNavbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isOpen","toggle","bind","assertThisInitialized","setState","react_default","a","createElement","Navbar","color","dark","expand","NavbarBrand","tag","Link","to","src","logo","className","alt","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","href","target","Component","AlertMessage","visible","onDismiss","Alert","fade","message","React","TodoList","todos","isLoading","expireTodo","remove","handleClick","getFormatDate","_this2","fetch","then","response","json","data","forEach","todo","Date","dueDate","concat","objectSpread","catch","err","console","error","alert","id","method","headers","Accept","Content-Type","updatedTodo","toConsumableArray","_this3","filter","i","dateTime","date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","event","preventDefault","item","tagName","eventTarget","parentElement","parent","targetButton","lastElementChild","firstElementChild","innerText","classList","contains","add","done","body","JSON","stringify","_this4","_this$state","msg","map","exTodo","components_AlertMessage","key","title","sort","o1","o2","sequence","todoList","e","role","aria-label","style","whiteSpace","content","ButtonGroup","Button","size","AppNavbar_AppNavbar","Container","fluid","Table","width","TodoEdit","defaultTodo","handleChange","handleSubmit","dateChange","match","params","value","name","dir","fetchURL","history","push","Form","onSubmit","FormGroup","Label","for","Input","type","placeholder","onChange","autoComplete","es","selected","excludeOutOfBoundsTimes","minDate","showTimeSelect","timeIntervals","timeFormat","dateFormat","timeCaption","placeholderText","withRouter","App","react_router_dom","react_router","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.329ec0c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport {\n  Collapse,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  NavItem,\n  NavLink,\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nimport logo from '../assets/img/logo.svg';\n\nexport default class AppNavbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  }\n\n  render() {\n    return (\n      <Navbar color=\"dark\" dark expand=\"md\">\n        <NavbarBrand tag={Link} to=\"/\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          Home\n        </NavbarBrand>\n        <NavbarToggler onClick={this.toggle} />\n        <Collapse isOpen={this.state.isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"https://github.com/dongw00\" target=\"_blank\">\n                @dongw00\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                href=\"https://github.com/oktadeveloper/okta-spring-boot-react-crud-example\"\n                target=\"_blank\">\n                GitHub\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    );\n  }\n}\n","import React from 'react';\nimport { Alert } from 'reactstrap';\n\nclass AlertMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { visible: true };\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  onDismiss() {\n    this.setState({ visible: false });\n  }\n\n  render() {\n    return (\n      <Alert\n        color=\"danger\"\n        isOpen={this.state.visible}\n        toggle={this.onDismiss}\n        fade={true}>\n        {this.props.message}\n      </Alert>\n    );\n  }\n}\n\nexport default AlertMessage;\n","import React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\n\nimport AlertMessage from './AlertMessage';\n\nimport '../assets/css/TodoList.css';\n\nconst URL = `/api/todo`;\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { todos: [], isLoading: true, expireTodo: [] };\n    this.remove = this.remove.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.getFormatDate = this.getFormatDate.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n\n    fetch(URL)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({ todos: data, isLoading: false });\n\n        // 마감기한 지난 todo 등록\n        this.state.todos.forEach(todo => {\n          if (new Date(todo.dueDate) < new Date() && todo.dueDate !== null) {\n            this.setState({\n              expireTodo: this.state.expireTodo.concat({ ...todo }),\n            });\n          }\n        });\n      })\n      .catch(err => {\n        console.error(`error! : ${err}`);\n        alert('서버에서 불러오는데 실패했습니다.');\n      });\n  }\n\n  /* Todo 삭제*/\n  async remove(id) {\n    await fetch(`${URL}/${id}`, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(() => {\n        let updatedTodo = [...this.state.todos].filter(i => i.id !== id);\n        this.setState({ todos: updatedTodo });\n      })\n      .catch(err => {\n        console.error(`error! : ${err}`);\n        alert('삭제하는데 실패하였습니다.');\n      });\n  }\n\n  /* 마감기한 날짜 처리 */\n  getFormatDate(dateTime) {\n    if (dateTime === null) return false;\n    const date = new Date(dateTime);\n    const year = date.getFullYear();\n\n    let month = date.getMonth() + 1;\n    month = month >= 10 ? month : '0' + month;\n\n    let day = date.getDate();\n    day = day >= 10 ? day : '0' + day;\n\n    let hours = date.getHours();\n    hours = hours >= 10 ? hours : '0' + hours;\n\n    let minutes = date.getMinutes();\n    minutes = minutes >= 10 ? minutes : '0' + minutes;\n\n    return `${year}년 ${month}월 ${day}일 ${hours}시 ${minutes}분`;\n  }\n\n  /* Done 처리 */\n  async handleClick(event, id) {\n    event.preventDefault();\n    let item = this.state.todos.filter(todo => todo.id === id)[0];\n\n    if (event.target.tagName === 'SPAN') {\n      const eventTarget = event.target.parentElement;\n\n      /* 버튼 변경 target */\n      const parent = eventTarget.parentElement.parentElement;\n      const targetButton =\n        parent.lastElementChild.firstElementChild.firstElementChild;\n\n      if (eventTarget.className !== 'done') {\n        eventTarget.className = 'done';\n        eventTarget.innerText = '⭕️';\n\n        /* 색상 변경 */\n        parent.className = 'text-success font-weight-bold mark';\n\n        /* 버튼 변경 */\n        if (!targetButton.classList.contains('d-none'))\n          targetButton.classList.add('d-none');\n      } else {\n        eventTarget.className = 'doing';\n        eventTarget.innerText = '❌';\n\n        /* 색상 변경 */\n        parent.className = '';\n\n        /* 버튼 변경 */\n        if (targetButton.classList.contains('d-none'))\n          targetButton.classList.remove('d-none');\n      }\n    }\n    if (event.target.className !== 'done' && event.target.tagName === 'A') {\n      /* 버튼 변경 target */\n      const parent = event.target.parentElement.parentElement;\n      const targetButton =\n        parent.lastElementChild.firstElementChild.firstElementChild;\n\n      event.target.className = 'done';\n      event.target.innerText = '⭕️';\n\n      /* 색상 변경 */\n      parent.className = 'text-success font-weight-bold mark';\n\n      /* 버튼 변경 */\n      if (!targetButton.classList.contains('d-none'))\n        targetButton.classList.add('d-none');\n    } else if (event.target.tagName === 'A') {\n      /* 버튼 변경 target */\n      const parent = event.target.parentElement.parentElement;\n      const targetButton =\n        parent.lastElementChild.firstElementChild.firstElementChild;\n\n      event.target.className = 'doing';\n      event.target.innerText = '❌';\n\n      /* 색상 변경 */\n      parent.className = '';\n\n      /* 버튼 변경 */\n      if (targetButton.classList.contains('d-none'))\n        targetButton.classList.remove('d-none');\n    }\n\n    item.done = !item.done;\n\n    await fetch(`${URL}/${id}`, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(item),\n    }).catch(err => {\n      console.error(`수정하는데 실패하였습니다. ${err}`);\n      alert('수정하는데 실패하였습니다.');\n    });\n  }\n\n  render() {\n    const { todos, isLoading, expireTodo } = this.state;\n\n    /* loading page */\n    if (isLoading) {\n      return <p>Loading...</p>;\n    }\n\n    const msg = expireTodo.map(exTodo => {\n      return (\n        <AlertMessage\n          key={exTodo.id}\n          message={`\"${exTodo.title}\"가 만료되었습니다.`}\n        />\n      );\n    });\n\n    /* 우선순위 정렬 */\n    todos.sort((o1, o2) => {\n      if (o1.sequence > o2.sequence) return 1;\n      else if (o1.sequence < o2.sequence) return -1;\n      else return 0;\n    });\n\n    /* Todo List 내용 처리 */\n    const todoList = todos.map(todo => {\n      return (\n        <tr\n          key={todo.id}\n          className={todo.done ? 'text-success font-weight-bold mark' : ''}>\n          <td>\n            <a\n              className={todo.done ? 'done' : 'doing'}\n              href=\"#\"\n              onClick={e => this.handleClick(e, todo.id)}>\n              <span role=\"img\" aria-label=\"emoji\">\n                {todo.done ? '⭕️' : '❌'}\n              </span>\n            </a>\n          </td>\n          <td style={{ whiteSpace: 'nowrap' }}>{todo.title}</td>\n          {/* 내용 */}\n          <td>{todo.content}</td>\n          {/* 마감기한 */}\n          <td>{this.getFormatDate(todo.dueDate)}</td>\n          {/* 우선순위 */}\n          <td>{todo.sequence}</td>\n          <td>\n            <ButtonGroup>\n              <Button\n                className={todo.done ? 'd-none' : ''}\n                size=\"sm\"\n                color=\"primary\"\n                tag={Link}\n                to={'/todo/' + todo.id}>\n                Edit\n              </Button>\n              <Button\n                size=\"sm\"\n                color=\"danger\"\n                onClick={() => this.remove(todo.id)}>\n                Delete\n              </Button>\n            </ButtonGroup>\n          </td>\n        </tr>\n      );\n    });\n\n    return (\n      <div>\n        <AppNavbar />\n        <Container fluid>\n          {/* Add button*/}\n          <div className=\"float-right\">\n            <Button color=\"success\" tag={Link} to=\"/todo/new\">\n              Add todo{' '}\n              <span role=\"img\" aria-label=\"emoji\">\n                😎\n              </span>\n            </Button>\n          </div>\n          <h2 className=\"mt-3 mb-5\">\n            <span role=\"img\" aria-label=\"emoji\">\n              🧘‍♂️\n            </span>{' '}\n            My Todo List\n          </h2>\n          {/* Table column 이름 */}\n          <Table className=\"mt-4\">\n            <thead>\n              <tr>\n                <th width=\"5%\">done</th>\n                <th width=\"20%\">제목</th>\n                <th width=\"20%\">내용</th>\n                <th>마감 기한</th>\n                <th>우선순위</th>\n                <th width=\"10%\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>{todoList}</tbody>\n          </Table>\n          {/* Alert Message */}\n          <div className=\"asd\">{msg}</div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport DatePicker from 'react-datepicker';\n\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport PropTypes from 'prop-types';\n\nconst URL = '/api';\n\nclass TodoEdit extends Component {\n  defaultTodo = {\n    title: '',\n    content: '',\n    sequence: 3,\n    dueDate: '',\n    done: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: this.defaultTodo,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.dateChange = this.dateChange.bind(this);\n  }\n\n  async componentDidMount() {\n    if (this.props.match.params.id !== 'new') {\n      const todo = await (await fetch(\n        `${URL}/todo/${this.props.match.params.id}`\n      )).json();\n      this.setState({ item: todo });\n    }\n  }\n\n  handleChange(event) {\n    const value = event.target.value;\n    const name = event.target.name;\n    let item = { ...this.state.item };\n    item[name] = value;\n    this.setState({ item });\n  }\n\n  dateChange(date) {\n    let item = { ...this.state.item };\n    item.dueDate = date;\n    this.setState({ item });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const { item } = this.state;\n\n    console.dir(item);\n    let fetchURL = '';\n    item.id\n      ? (fetchURL = `${URL}/todo/${item.id}`)\n      : (fetchURL = `${URL}/todo`);\n\n    await fetch(fetchURL, {\n      method: item.id ? 'PUT' : 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(item),\n    });\n    this.props.history.push('/');\n  }\n\n  render() {\n    const { item } = this.state;\n    const title = (\n      <h2 className=\"mt-2 mb-4\">{item.id ? '🛠Edit todo' : '📝Add todo'}</h2>\n    );\n\n    return (\n      <div>\n        <AppNavbar />\n        <Container>\n          {title}\n          <Form onSubmit={this.handleSubmit}>\n            <FormGroup>\n              <Label for=\"title\">\n                <span role=\"img\" aria-label=\"emoji\">\n                  📌\n                </span>\n                제목\n              </Label>\n              <Input\n                type=\"text\"\n                name=\"title\"\n                id=\"title\"\n                placeholder=\"제목을 입력해주세요.\"\n                value={item.title || ''}\n                onChange={this.handleChange}\n                autoComplete=\"title\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"content\">내용</Label>\n              <Input\n                type=\"text\"\n                name=\"content\"\n                id=\"content\"\n                placeholder=\"내용을 입력해주세요.\"\n                value={item.content || ''}\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"sequence\">우선순위</Label>\n              <Input\n                type=\"select\"\n                name=\"sequence\"\n                id=\"sequence\"\n                placeholder=\"우선순위\"\n                value={item.sequence || ''}\n                onChange={this.handleChange}>\n                <option value=\"1\">최우선</option>\n                <option value=\"2\">우선</option>\n                <option value=\"3\">보통</option>\n              </Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"date\">\n                <span role=\"img\" aria-label=\"emoji\">\n                  ⏰\n                </span>\n                todo 기간\n              </Label>\n              <DatePicker\n                className=\"date\"\n                name=\"date\"\n                onChange={this.dateChange}\n                selected={\n                  this.state.item.dueDate\n                    ? new Date(this.state.item.dueDate)\n                    : ''\n                }\n                excludeOutOfBoundsTimes\n                minDate={new Date()}\n                showTimeSelect\n                timeIntervals={30}\n                timeFormat=\"HH:mm\"\n                dateFormat=\"yyyy년 M월 d일 h:mm aa\"\n                timeCaption=\"시간\"\n                placeholderText=\"기간을 선택해주세요\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Button color=\"primary\" type=\"submit\">\n                Save\n              </Button>{' '}\n              <Button color=\"secondary\" tag={Link} to=\"/\">\n                Cancel\n              </Button>\n            </FormGroup>\n          </Form>\n        </Container>\n      </div>\n    );\n  }\n}\n\nTodoEdit.propTypes = {\n  title: PropTypes.string,\n  content: PropTypes.string,\n  sequence: PropTypes.number,\n  dueDate: PropTypes.string,\n  done: PropTypes.bool,\n};\n\nexport default withRouter(TodoEdit);\n","import React, { Component } from 'react';\nimport './assets/css/App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport TodoList from './components/TodoList';\nimport TodoEdit from './components/TodoEdit';\n\nclass App extends Component {\n  render() {\n    return (\n        <Router>\n          <Switch>\n            <Route path=\"/\" exact={true} component={TodoList} />\n            <Route path=\"/todo/:id\" component={TodoEdit} />\n          </Switch>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}